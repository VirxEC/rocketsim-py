from rocketsim.sim import Ball, Car, CarConfig, Team

class Vec3:
    x: float
    y: float
    z: float

    def __init__(x: float = 0, y: float = 0, z: float = 0) -> Vec3: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...

    def with_x(self, x: float) -> Vec3: ...
    def with_y(self, y: float) -> Vec3: ...
    def with_z(self, z: float) -> Vec3: ...

class RotMat:
    forward: Vec3
    right: Vec3
    up: Vec3

    def __init__(forward: Vec3, right: Vec3, up: Vec3) -> RotMat: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...

    @staticmethod
    def identity() -> RotMat: ...
    @staticmethod
    def from_angles(pitch: float, yaw: float, roll: float) -> RotMat: ...

class GameState:
    tick_rate: float
    tick_count: int
    ball: Ball
    ball_rot: RotMat
    cars: list[CarInfo]

    def __init__(tick_count: float=0, tick_rate: float=0, ball: Ball=Ball(), ball_rot: RotMat=RotMat(), cars: list[CarInfo]=[]) -> GameState: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...

class CarInfo:
    id: int
    team: Team
    state: Car
    config: CarConfig

    def __init__(id: int, team: Team=Team.Blue, state: Car=Car(), config: CarConfig=CarConfig()) -> CarInfo: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...
